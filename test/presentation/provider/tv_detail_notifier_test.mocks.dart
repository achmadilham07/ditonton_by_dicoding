// Mocks generated by Mockito 5.0.16 from annotations
// in ditonton/test/presentation/provider/tv_detail_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i6;
import 'package:ditonton/data/models/episode_response.dart' as _i7;
import 'package:ditonton/domain/entities/movie_detail.dart' as _i14;
import 'package:ditonton/domain/entities/tv.dart' as _i11;
import 'package:ditonton/domain/entities/tv_detail.dart' as _i9;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i2;
import 'package:ditonton/domain/usecases/get_tv_detail.dart' as _i8;
import 'package:ditonton/domain/usecases/get_tv_episode.dart' as _i4;
import 'package:ditonton/domain/usecases/get_tv_recommendation.dart' as _i10;
import 'package:ditonton/domain/usecases/get_watchlist_status.dart' as _i12;
import 'package:ditonton/domain/usecases/remove_watchlist.dart' as _i15;
import 'package:ditonton/domain/usecases/save_watchlist.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeMovieRepository_0 extends _i1.Fake implements _i2.MovieRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetTvEpisode].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvEpisode extends _i1.Mock implements _i4.GetTvEpisode {
  MockGetTvEpisode() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_0()) as _i2.MovieRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Episode>>> execute(
          int? idTv, int? idEpisode) =>
      (super.noSuchMethod(Invocation.method(#execute, [idTv, idEpisode]),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i7.Episode>>>.value(
              _FakeEither_1<_i6.Failure, List<_i7.Episode>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.Episode>>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i8.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_0()) as _i2.MovieRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i9.TvDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue: Future<_i3.Either<_i6.Failure, _i9.TvDetail>>.value(
                  _FakeEither_1<_i6.Failure, _i9.TvDetail>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i9.TvDetail>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [GetTvRecommendation].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendation extends _i1.Mock
    implements _i10.GetTvRecommendation {
  MockGetTvRecommendation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_0()) as _i2.MovieRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i11.Tv>>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue: Future<_i3.Either<_i6.Failure, List<_i11.Tv>>>.value(
                  _FakeEither_1<_i6.Failure, List<_i11.Tv>>()))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i11.Tv>>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i12.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_0()) as _i2.MovieRepository);

  @override
  _i5.Future<bool> executeMovie(int? id) =>
      (super.noSuchMethod(Invocation.method(#executeMovie, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);

  @override
  _i5.Future<bool> executeTv(int? id) =>
      (super.noSuchMethod(Invocation.method(#executeTv, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i13.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_0()) as _i2.MovieRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> executeMovie(
          _i14.MovieDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#executeMovie, [tv]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> executeTv(_i9.TvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#executeTv, [tv]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i15.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_0()) as _i2.MovieRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> executeMovie(
          _i14.MovieDetail? film) =>
      (super.noSuchMethod(Invocation.method(#executeMovie, [film]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> executeTv(_i9.TvDetail? film) =>
      (super.noSuchMethod(Invocation.method(#executeTv, [film]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);

  @override
  String toString() => super.toString();
}
